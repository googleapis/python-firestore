tests:
  - description: selectSpecificFields
    pipeline:
      - Collection: books
      - Select:
          - title
          - author
      - Sort:
          - Ordering:
            - Field: author
            - ASCENDING
    assert_results:
      - title: "The Hitchhiker's Guide to the Galaxy"
        author: "Douglas Adams"
      - title: "The Great Gatsby"
        author: "F. Scott Fitzgerald"
      - title: "Dune"
        author: "Frank Herbert"
      - title: "Crime and Punishment"
        author: "Fyodor Dostoevsky"
      - title: "One Hundred Years of Solitude"
        author: "Gabriel García Márquez"
      - title: "1984"
        author: "George Orwell"
      - title: "To Kill a Mockingbird"
        author: "Harper Lee"
      - title: "The Lord of the Rings"
        author: "J.R.R. Tolkien"
      - title: "Pride and Prejudice"
        author: "Jane Austen"
      - title: "The Handmaid's Tale"
        author: "Margaret Atwood"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                author:
                  fieldReferenceValue: author
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: author
          name: sort
  - description: addAndRemoveFields
    pipeline:
      - Collection: books
      - AddFields:
        - AliasedExpr:
            - Expr.string_concat:
                - Field: author
                - Constant: _
                - Field: title
            - "author_title"
        - AliasedExpr:
            - Expr.string_concat:
                - Field: title
                - Constant: _
                - Field: author
            - "title_author"
      - RemoveFields:
        - title_author
        - tags
        - awards
        - rating
        - title
        - Field: published
        - Field: genre
        - Field: nestedField # Field does not exist, should be ignored
      - Sort:
        - Ordering:
          - Field: author_title
          - ASCENDING
    assert_results:
      - author: Douglas Adams
        author_title: Douglas Adams_The Hitchhiker's Guide to the Galaxy
      - author: F. Scott Fitzgerald
        author_title: F. Scott Fitzgerald_The Great Gatsby
      - author: Frank Herbert
        author_title: Frank Herbert_Dune
      - author: Fyodor Dostoevsky
        author_title: Fyodor Dostoevsky_Crime and Punishment
      - author: Gabriel García Márquez
        author_title: Gabriel García Márquez_One Hundred Years of Solitude
      - author: George Orwell
        author_title: George Orwell_1984
      - author: Harper Lee
        author_title: Harper Lee_To Kill a Mockingbird
      - author: J.R.R. Tolkien
        author_title: J.R.R. Tolkien_The Lord of the Rings
      - author: Jane Austen
        author_title: Jane Austen_Pride and Prejudice
      - author: Margaret Atwood
        author_title: Margaret Atwood_The Handmaid's Tale
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                author_title:
                  functionValue:
                    args:
                    - fieldReferenceValue: author
                    - stringValue: _
                    - fieldReferenceValue: title
                    name: string_concat
                title_author:
                  functionValue:
                    args:
                    - fieldReferenceValue: title
                    - stringValue: _
                    - fieldReferenceValue: author
                    name: string_concat
          name: add_fields
        - args:
          - fieldReferenceValue: title_author
          - fieldReferenceValue: tags
          - fieldReferenceValue: awards
          - fieldReferenceValue: rating
          - fieldReferenceValue: title
          - fieldReferenceValue: published
          - fieldReferenceValue: genre
          - fieldReferenceValue: nestedField
          name: remove_fields
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: author_title
          name: sort

  - description: testPipelineWithOffsetAndLimit
    pipeline:
      - Collection: books
      - Sort:
          - Ordering:
            - Field: author
            - ASCENDING
      - Offset: 5
      - Limit: 3
      - Select:
        - title
        - author
    assert_results:
      - title: "1984"
        author: George Orwell
      - title: To Kill a Mockingbird
        author: Harper Lee
      - title: The Lord of the Rings
        author: J.R.R. Tolkien
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: author
          name: sort
        - args:
          - integerValue: '5'
          name: offset
        - args:
          - integerValue: '3'
          name: limit
        - args:
          - mapValue:
              fields:
                author:
                  fieldReferenceValue: author
                title:
                  fieldReferenceValue: title
          name: select
  - description: testArithmeticOperations
    pipeline:
      - Collection: books
      - Where:
        - Expr.equal:
          - Field: title
          - Constant: To Kill a Mockingbird
      - Select:
        - AliasedExpr:
            - Expr.add:
                - Field: rating
                - Constant: 1
            - "ratingPlusOne"
        - AliasedExpr:
            - Expr.subtract:
                - Field: published
                - Constant: 1900
            - "yearsSince1900"
        - AliasedExpr:
            - Expr.multiply:
                - Field: rating
                - Constant: 10
            - "ratingTimesTen"
        - AliasedExpr:
            - Expr.divide:
                - Field: rating
                - Constant: 2
            - "ratingDividedByTwo"
        - AliasedExpr:
            - Expr.multiply:
                - Field: rating
                - Constant: 20
            - "ratingTimes20"
        - AliasedExpr:
            - Expr.add:
                - Field: rating
                - Constant: 3
            - "ratingPlus3"
        - AliasedExpr:
            - Expr.mod:
                - Field: rating
                - Constant: 2
            - "ratingMod2"
    assert_results:
      - ratingPlusOne: 5.2
        yearsSince1900: 60
        ratingTimesTen: 42.0
        ratingDividedByTwo: 2.1
        ratingTimes20: 84
        ratingPlus3: 7.2
        ratingMod2: 0.20000000000000018
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: To Kill a Mockingbird
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                ratingDividedByTwo:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - integerValue: '2'
                    name: divide
                ratingPlusOne:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - integerValue: '1'
                    name: add
                ratingTimesTen:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - integerValue: '10'
                    name: multiply
                yearsSince1900:
                  functionValue:
                    args:
                    - fieldReferenceValue: published
                    - integerValue: '1900'
                    name: subtract
                ratingTimes20:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - integerValue: '20'
                    name: multiply
                ratingPlus3:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - integerValue: '3'
                    name: add
                ratingMod2:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - integerValue: '2'
                    name: mod
          name: select
  - description: testSampleLimit
    pipeline:
      - Collection: books
      - Sample: 3
    assert_count: 3 # Results will vary due to randomness
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - integerValue: '3'
          - stringValue: documents
          name: sample
  - description: testSamplePercentage
    pipeline:
      - Collection: books
      - Sample:
          - SampleOptions:
            - 0.6
            - percent
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - doubleValue: 0.6
          - stringValue: percent
          name: sample
  - description: testUnion
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: genre
              - Constant: Romance
      - Union:
        - Pipeline:
            - Collection: books
            - Where:
                - Expr.equal:
                    - Field: genre
                    - Constant: Dystopian
      - Select:
        - title
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
    assert_results:
      - title: "1984"
      - title: Pride and Prejudice
      - title: "The Handmaid's Tale"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: genre
              - stringValue: Romance
              name: equal
          name: where
        - args:
          - pipelineValue:
              stages:
              - args:
                - referenceValue: /books
                name: collection
              - args:
                - functionValue:
                    args:
                    - fieldReferenceValue: genre
                    - stringValue: Dystopian
                    name: equal
                name: where
          name: union
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testUnionFullCollection
    pipeline:
      - Collection: books
      - Union:
        - Pipeline:
          - Collection: books
    assert_count: 20 # Results will be duplicated
  - description: testDocumentId
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: title
              - Constant: "The Hitchhiker's Guide to the Galaxy"
      - Select:
        - AliasedExpr:
            - Expr.document_id:
                - Field: __name__
            - "doc_id"
    assert_results:
      - doc_id: "book1"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: "The Hitchhiker's Guide to the Galaxy"
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                doc_id:
                  functionValue:
                    name: document_id
                    args:
                    - fieldReferenceValue: __name__
          name: select
  - description: testSum
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: genre
              - Constant: Science Fiction
      - Aggregate:
        - AliasedExpr:
            - Expr.sum:
              - Field: rating
            - "total_rating"
    assert_results:
      - total_rating: 8.8

  - description: testCollectionId
    pipeline:
      - Collection: books
      - Limit: 1
      - Select:
        - AliasedExpr:
            - Expr.collection_id:
                - Field: __name__
            - "collectionName"
    assert_results:
      - collectionName: "books"
  - description: testFieldToFieldArithmetic
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: title
              - Constant: "Dune"
      - Select:
        - AliasedExpr:
            - Expr.add:
                - Field: published
                - Field: rating
            - "pub_plus_rating"
    assert_results:
      - pub_plus_rating: 1969.6
  - description: testMathExpressions
    pipeline:
      - Collection: books
      - Where:
        - Expr.equal:
          - Field: title
          - Constant: To Kill a Mockingbird
      - Select:
        - AliasedExpr:
            - Expr.abs:
                - Field: rating
            - "abs_rating"
        - AliasedExpr:
            - Expr.ceil:
                - Field: rating
            - "ceil_rating"
        - AliasedExpr:
            - Expr.exp:
                - Field: rating
            - "exp_rating"
        - AliasedExpr:
            - Expr.floor:
                - Field: rating
            - "floor_rating"
        - AliasedExpr:
            - Expr.ln:
                - Field: rating
            - "ln_rating"
        - AliasedExpr:
            - Expr.log10:
                - Field: rating
            - "log_rating_base10"
        - AliasedExpr:
            - Expr.log:
                - Field: rating
                - Constant: 2
            - "log_rating_base2"
        - AliasedExpr:
            - Expr.pow:
                - Field: rating
                - Constant: 2
            - "pow_rating"
        - AliasedExpr:
            - Expr.sqrt:
                - Field: rating
            - "sqrt_rating"
    assert_results_approximate:
      - abs_rating: 4.2
        ceil_rating: 5.0
        exp_rating: 66.686331
        floor_rating: 4.0
        ln_rating: 1.4350845
        log_rating_base10: 0.623249
        log_rating_base2: 2.0704
        pow_rating: 17.64
        sqrt_rating: 2.049390
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: To Kill a Mockingbird
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                abs_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    name: abs
                ceil_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    name: ceil
                exp_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    name: exp
                floor_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    name: floor
                ln_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    name: ln
                log_rating_base10:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    name: log10
                log_rating_base2:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - integerValue: '2'
                    name: log
                pow_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - integerValue: '2'
                    name: pow
                sqrt_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    name: sqrt
          name: select
  - description: testRoundExpressions
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal_any:
              - Field: title
              - - Constant: "To Kill a Mockingbird" # rating 4.2
                - Constant: "Pride and Prejudice" # rating 4.5
                - Constant: "The Lord of the Rings" # rating 4.7
      - Select:
        - title
        - AliasedExpr:
            - Expr.round:
                - Field: rating
            - "round_rating"
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
    assert_results:
      - title: "Pride and Prejudice"
        round_rating: 5.0
      - title: "The Lord of the Rings"
        round_rating: 5.0
      - title: "To Kill a Mockingbird"
        round_rating: 4.0
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - functionValue:
                  args:
                  - stringValue: "To Kill a Mockingbird"
                  - stringValue: "Pride and Prejudice"
                  - stringValue: "The Lord of the Rings"
                  name: array
              name: equal_any
          name: where
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
                round_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    name: round
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testCollectionGroup
    pipeline:
      - CollectionGroup: books
      - Select:
        - title
      - Distinct:
        - title
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
    assert_results:
      - title: "1984"
      - title: "Crime and Punishment"
      - title: "Dune"
      - title: "One Hundred Years of Solitude"
      - title: "Pride and Prejudice"
      - title: "The Great Gatsby"
      - title: "The Handmaid's Tale"
      - title: "The Hitchhiker's Guide to the Galaxy"
      - title: "The Lord of the Rings"
      - title: "To Kill a Mockingbird"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: ''
          - stringValue: books
          name: collection_group
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: distinct
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort

  - description: testDistinct
    pipeline:
      - Collection: books
      - Distinct:
        - genre
      - Sort:
        - Ordering:
          - Field: genre
          - ASCENDING
    assert_results:
      - genre: Dystopian
      - genre: Fantasy
      - genre: Magical Realism
      - genre: Modernist
      - genre: Psychological Thriller
      - genre: Romance
      - genre: Science Fiction
      - genre: Southern Gothic
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                genre:
                  fieldReferenceValue: genre
          name: distinct
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: genre
          name: sort

  - description: testDocuments
    pipeline:
      - Documents:
        - /books/book1
        - /books/book10
      - Select:
        - title
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
    assert_results:
      - title: "Dune"
      - title: "The Hitchhiker's Guide to the Galaxy"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books/book1
          - referenceValue: /books/book10
          name: documents
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort

  - description: testDatabase
    pipeline:
      - Database
      - Select:
        - title
      - Distinct:
        - title
      - Aggregate:
        - AliasedExpr:
            - Count: []
            - count
      - Select:
        - AliasedExpr:
          - Conditional:
            - Expr.greater_than_or_equal:
              - Field: count
              - Constant: 10
            - Constant: True
            - Constant: False
          - result
    assert_results:
      - result: True
    assert_proto:
      pipeline:
        stages:
        - name: database
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: distinct
        - args:
          - mapValue:
              fields:
                count:
                  functionValue:
                    name: count
          - mapValue: {}
          name: aggregate
        - name: select
          args:
          - mapValue:
              fields:
                result:
                  functionValue:
                    args:
                    - functionValue:
                        args:
                        - fieldReferenceValue: count
                        - integerValue: '10'
                        name: greater_than_or_equal
                    - booleanValue: true
                    - booleanValue: false
                    name: conditional
  - description: testGenericStage
    pipeline:
      - GenericStage:
          - "collection"
          - Value:
              reference_value: "/books"
      - GenericStage:
        - "where"
        - Expr.equal:
          - Field: title
          - Constant: The Hitchhiker's Guide to the Galaxy
      - GenericStage:
        - "select"
        - Value:
            map_value:
              fields:
                author:
                  field_reference_value: author
    assert_results:
      - author: Douglas Adams
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: The Hitchhiker's Guide to the Galaxy
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                author:
                  fieldReferenceValue: author
          name: select
  - description: testUnnest
    pipeline:
      - Collection: books
      - Where:
        - Expr.equal:
          - Field: title
          - Constant: The Hitchhiker's Guide to the Galaxy
      - Unnest:
        - tags
        - tags_alias
      - Select: tags_alias
    assert_results:
      - tags_alias: comedy
      - tags_alias: space
      - tags_alias: adventure
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: The Hitchhiker's Guide to the Galaxy
              name: equal
          name: where
        - args:
          - fieldReferenceValue: tags
          - fieldReferenceValue: tags_alias
          name: unnest
        - args:
          - mapValue:
              fields:
                tags_alias:
                  fieldReferenceValue: tags_alias
          name: select
  - description: testUnnestWithOptions
    pipeline:
      - Collection: books
      - Where:
        - Expr.equal:
          - Field: title
          - Constant: The Hitchhiker's Guide to the Galaxy
      - Unnest:
          field: tags
          alias: tags_alias
          options:
            UnnestOptions:
            - index
      - Select: 
        - tags_alias
        - index
    assert_results:
      - tags_alias: comedy
        index: 0
      - tags_alias: space
        index: 1
      - tags_alias: adventure
        index: 2
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: The Hitchhiker's Guide to the Galaxy
              name: equal
          name: where
        - args:
          - fieldReferenceValue: tags
          - fieldReferenceValue: tags_alias
          name: unnest
          options:
            index_field:
              fieldReferenceValue: index
        - args:
          - mapValue:
              fields:
                tags_alias:
                  fieldReferenceValue: tags_alias
                index:
                  fieldReferenceValue: index
          name: select