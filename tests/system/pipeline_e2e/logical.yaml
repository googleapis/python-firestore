tests:
  - description: whereByMultipleConditions
    pipeline:
      - Collection: books
      - Where:
          - And:
              - Expr.greater_than:
                  - Field: rating
                  - Constant: 4.5
              - Expr.equal:
                  - Field: genre
                  - Constant: Science Fiction
    assert_results:
      - title: Dune
        author: Frank Herbert
        genre: Science Fiction
        published: 1965
        rating: 4.6
        tags:
          - politics
          - desert
          - ecology
        awards:
          hugo: true
          nebula: true
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - functionValue:
                  args:
                  - fieldReferenceValue: rating
                  - doubleValue: 4.5
                  name: greater_than
              - functionValue:
                  args:
                  - fieldReferenceValue: genre
                  - stringValue: Science Fiction
                  name: equal
              name: and
          name: where
  - description: whereByOrCondition
    pipeline:
      - Collection: books
      - Where:
          - Or:
              - Expr.equal:
                  - Field: genre
                  - Constant: Romance
              - Expr.equal:
                  - Field: genre
                  - Constant: Dystopian
      - Select:
        - title
      - Sort:
          - Ordering:
            - Field: title
            - ASCENDING
    assert_results:
      - title: "1984"
      - title: Pride and Prejudice
      - title: The Handmaid's Tale
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - functionValue:
                  args:
                  - fieldReferenceValue: genre
                  - stringValue: Romance
                  name: equal
              - functionValue:
                  args:
                  - fieldReferenceValue: genre
                  - stringValue: Dystopian
                  name: equal
              name: or
          name: where
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testComparisonOperators
    pipeline:
      - Collection: books
      - Where:
          - And:
              - Expr.greater_than:
                  - Field: rating
                  - Constant: 4.2
              - Expr.less_than_or_equal:
                  - Field: rating
                  - Constant: 4.5
              - Expr.not_equal:
                  - Field: genre
                  - Constant: Science Fiction
      - Select:
        - rating
        - title
      - Sort:
        - Ordering:
          - title
          - ASCENDING
    assert_results:
      - rating: 4.3
        title: Crime and Punishment
      - rating: 4.3
        title: One Hundred Years of Solitude
      - rating: 4.5
        title: Pride and Prejudice
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - functionValue:
                  args:
                  - fieldReferenceValue: rating
                  - doubleValue: 4.2
                  name: greater_than
              - functionValue:
                  args:
                  - fieldReferenceValue: rating
                  - doubleValue: 4.5
                  name: less_than_or_equal
              - functionValue:
                  args:
                  - fieldReferenceValue: genre
                  - stringValue: Science Fiction
                  name: not_equal
              name: and
          name: where
        - args:
          - mapValue:
              fields:
                rating:
                  fieldReferenceValue: rating
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testLogicalOperators
    pipeline:
      - Collection: books
      - Where:
          - Or:
              - And:
                  - Expr.greater_than:
                      - Field: rating
                      - Constant: 4.5
                  - Expr.equal:
                      - Field: genre
                      - Constant: Science Fiction
              - Expr.less_than:
                  - Field: published
                  - Constant: 1900
      - Select:
          - title
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
    assert_results:
      - title: Crime and Punishment
      - title: Dune
      - title: Pride and Prejudice
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - functionValue:
                  args:
                  - functionValue:
                      args:
                      - fieldReferenceValue: rating
                      - doubleValue: 4.5
                      name: greater_than
                  - functionValue:
                      args:
                      - fieldReferenceValue: genre
                      - stringValue: Science Fiction
                      name: equal
                  name: and
              - functionValue:
                  args:
                  - fieldReferenceValue: published
                  - integerValue: '1900'
                  name: less_than
              name: or
          name: where
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testChecks
    pipeline:
      - Collection: books
      - Where:
            - Not:
                - Expr.is_nan:
                  - Field: rating
      - Select:
          - AliasedExpr:
              - Not:
                  - Expr.is_nan:
                    - Field: rating
              - "ratingIsNotNaN"
      - Limit: 1
    assert_results:
      - ratingIsNotNaN: true
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - functionValue:
                  args:
                  - fieldReferenceValue: rating
                  name: is_nan
              name: not
          name: where
        - args:
          - mapValue:
              fields:
                ratingIsNotNaN:
                  functionValue:
                    args:
                    - functionValue:
                        args:
                        - fieldReferenceValue: rating
                        name: is_nan
                    name: not
          name: select
        - args:
          - integerValue: '1'
          name: limit
  - description: testIsNotNull
    pipeline:
      - Collection: books
      - Where:
          - Expr.is_not_null:
              - Field: rating
    assert_count: 10
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: rating
              name: is_not_null
          name: where
  - description: testIsNotNaN
    pipeline:
      - Collection: books
      - Where:
          - Expr.is_not_nan:
              - Field: rating
    assert_count: 10
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: rating
              name: is_not_nan
          name: where
  - description: testIsAbsent
    pipeline:
      - Collection: books
      - Where:
          - Expr.is_absent:
              - Field: awards.pulitzer
    assert_count: 9
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: awards.pulitzer
              name: is_absent
          name: where
  - description: testIfAbsent
    pipeline:
      - Collection: books
      - Select:
        - AliasedExpr:
            - Expr.if_absent:
                - Field: awards.pulitzer
                - Constant: false
            - "pulitzer_award"
        - title
      - Where:
          - Expr.equal:
              - Field: pulitzer_award
              - Constant: true
    assert_results:
      - pulitzer_award: true
        title: To Kill a Mockingbird
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                pulitzer_award:
                  functionValue:
                    name: if_absent
                    args:
                    - fieldReferenceValue: awards.pulitzer
                    - booleanValue: false
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: pulitzer_award
              - booleanValue: true
              name: equal
          name: where
  - description: testIsError
    pipeline:
      - Collection: books
      - Select:
        - AliasedExpr:
            - Expr.is_error:
                - Expr.divide:
                    - Field: rating
                    - Constant: "string"
            - "is_error_result"
      - Limit: 1
    assert_results:
      - is_error_result: true
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                is_error_result:
                  functionValue:
                    name: is_error
                    args:
                    - functionValue:
                        name: divide
                        args:
                        - fieldReferenceValue: rating
                        - stringValue: "string"
          name: select
        - args:
          - integerValue: '1'
          name: limit
  - description: testIfError
    pipeline:
      - Collection: books
      - Select:
        - AliasedExpr:
            - Expr.if_error:
                - Expr.divide:
                    - Field: rating
                    - Field: genre
                - Constant: "An error occurred"
            - "if_error_result"
      - Limit: 1
    assert_results:
      - if_error_result: "An error occurred"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                if_error_result:
                  functionValue:
                    name: if_error
                    args:
                    - functionValue:
                        name: divide
                        args:
                        - fieldReferenceValue: rating
                        - fieldReferenceValue: genre
                    - stringValue: "An error occurred"
          name: select
        - args:
          - integerValue: '1'
          name: limit
  - description: testLogicalMinMax
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: Douglas Adams
      - Select:
          - AliasedExpr:
              - Expr.logical_maximum:
                  - Field: rating
                  - Constant: 4.5
              - "max_rating"
          - AliasedExpr:
              - Expr.logical_minimum:
                  - Field: published
                  - Constant: 1900
              - "min_published"
    assert_results:
      - max_rating: 4.5
        min_published: 1900
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: Douglas Adams
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                min_published:
                  functionValue:
                    args:
                    - fieldReferenceValue: published
                    - integerValue: '1900'
                    name: minimum
                max_rating:
                  functionValue:
                    args:
                    - fieldReferenceValue: rating
                    - doubleValue: 4.5
                    name: maximum
          name: select
  - description: testGreaterThanOrEqual
    pipeline:
      - Collection: books
      - Where:
          - Expr.greater_than_or_equal:
              - Field: rating
              - Constant: 4.6
      - Select:
        - title
        - rating
      - Sort:
        - Ordering:
          - Field: rating
          - ASCENDING
    assert_results:
      - title: Dune
        rating: 4.6
      - title: The Lord of the Rings
        rating: 4.7
  - description: testInAndNotIn
    pipeline:
      - Collection: books
      - Where:
          - And:
            - Expr.equal_any:
                - Field: genre
                - - Constant: Romance
                  - Constant: Dystopian
            - Expr.not_equal_any:
                - Field: author
                - - Constant: "George Orwell"
    assert_results:
      - title: "Pride and Prejudice"
        author: "Jane Austen"
        genre: "Romance"
        published: 1813
        rating: 4.5
        tags:
          - classic
          - social commentary
          - love
        awards:
          none: true
      - title: "The Handmaid's Tale"
        author: "Margaret Atwood"
        genre: "Dystopian"
        published: 1985
        rating: 4.1
        tags:
          - feminism
          - totalitarianism
          - resistance
        awards:
          "arthur c. clarke": true
          "booker prize": false
  - description: testExists
    pipeline:
      - Collection: books
      - Where:
          - And:
            - Expr.exists:
              - Field: awards.pulitzer
            - Expr.equal:
              - Field: awards.pulitzer
              - Constant: true
      - Select:
        - title
    assert_results:
      - title: To Kill a Mockingbird
  - description: testXor
    pipeline:
      - Collection: books
      - Where:
          - Xor:
            - - Expr.equal:
                  - Field: genre
                  - Constant: Romance
              - Expr.greater_than:
                  - Field: published
                  - Constant: 1980
      - Select:
        - title
        - genre
        - published
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
    assert_results:
      - title: "Pride and Prejudice"
        genre: "Romance"
        published: 1813
      - title: "The Handmaid's Tale"
        genre: "Dystopian"
        published: 1985
  - description: testConditional
    pipeline:
      - Collection: books
      - Select:
        - title
        - AliasedExpr:
            - Conditional:
                - Expr.greater_than:
                    - Field: published
                    - Constant: 1950
                - Constant: "Modern"
                - Constant: "Classic"
            - "era"
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
      - Limit: 4
    assert_results:
      - title: "1984"
        era: "Classic"
      - title: "Crime and Punishment"
        era: "Classic"
      - title: "Dune"
        era: "Modern"
      - title: "One Hundred Years of Solitude"
        era: "Modern"
  - description: testFieldToFieldComparison
    pipeline:
      - Collection: books
      - Where:
          - Expr.greater_than:
              - Field: published
              - Field: rating
      - Select:
        - title
    assert_count: 10 # All books were published after year 4.7
  - description: testExistsNegative
    pipeline:
      - Collection: books
      - Where:
          - Expr.exists:
              - Field: non_existent_field
    assert_count: 0
  - description: testConditionalWithFields
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal_any:
              - Field: title
              - - Constant: "Dune"
                - Constant: "1984"
      - Select:
        - title
        - AliasedExpr:
            - Conditional:
                - Expr.greater_than:
                    - Field: published
                    - Constant: 1950
                - Field: author
                - Field: genre
            - "conditional_field"
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
    assert_results:
      - title: "1984"
        conditional_field: "Dystopian"
      - title: "Dune"
        conditional_field: "Frank Herbert"
