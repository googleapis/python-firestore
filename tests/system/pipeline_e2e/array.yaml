tests:
  - description: testArrayContains
    pipeline:
      - Collection: books
      - Where:
          - Expr.array_contains:
              - Field: tags
              - Constant: comedy
    assert_results:
      - title: The Hitchhiker's Guide to the Galaxy
        author: Douglas Adams
        awards:
          hugo: true
          nebula: false
        genre: Science Fiction
        published: 1979
        rating: 4.2
        tags: ["comedy", "space", "adventure"]
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: tags
              - stringValue: comedy
              name: array_contains
          name: where
  - description: testArrayContainsAny
    pipeline:
      - Collection: books
      - Where:
          - Expr.array_contains_any:
            - Field: tags
            - - Constant: comedy
              - Constant: classic
      - Select:
        - title
      - Sort:
          - Ordering:
            - Field: title
            - ASCENDING
    assert_results:
      - title: Pride and Prejudice
      - title: The Hitchhiker's Guide to the Galaxy
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: tags
              - functionValue:
                  args:
                  - stringValue: comedy
                  - stringValue: classic
                  name: array
              name: array_contains_any
          name: where
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testArrayContainsAll
    pipeline:
      - Collection: books
      - Where:
          - Expr.array_contains_all:
              - Field: tags
              - - Constant: adventure
                - Constant: magic
      - Select:
        - title
    assert_results:
      - title: The Lord of the Rings
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: tags
              - functionValue:
                  args:
                  - stringValue: adventure
                  - stringValue: magic
                  name: array
              name: array_contains_all
          name: where
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
  - description: testArrayLength
    pipeline:
      - Collection: books
      - Select:
        - AliasedExpr:
            - Expr.array_length:
                - Field: tags
            - "tagsCount"
      - Where:
          - Expr.equal:
              - Field: tagsCount
              - Constant: 3
    assert_results: # All documents have 3 tags
      - tagsCount: 3
      - tagsCount: 3
      - tagsCount: 3
      - tagsCount: 3
      - tagsCount: 3
      - tagsCount: 3
      - tagsCount: 3
      - tagsCount: 3
      - tagsCount: 3
      - tagsCount: 3
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                tagsCount:
                  functionValue:
                    args:
                    - fieldReferenceValue: tags
                    name: array_length
          name: select
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: tagsCount
              - integerValue: '3'
              name: equal
          name: where
  - description: testArrayReverse
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: title
              - Constant: "The Hitchhiker's Guide to the Galaxy"
      - Select:
        - AliasedExpr:
            - Expr.array_reverse:
                - Field: tags
            - "reversedTags"
    assert_results:
      - reversedTags:
        - adventure
        - space
        - comedy
  - description: testArrayConcat
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: title
              - Constant: "The Hitchhiker's Guide to the Galaxy"
      - Select:
        - AliasedExpr:
            - Expr.array_concat:
                - Field: tags
                - Constant: ["new_tag", "another_tag"]
            - "concatenatedTags"
    assert_results:
      - concatenatedTags:
        - comedy
        - space
        - adventure
        - new_tag
        - another_tag
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: "The Hitchhiker's Guide to the Galaxy"
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                concatenatedTags:
                  functionValue:
                    args:
                    - fieldReferenceValue: tags
                    - functionValue:
                        args:
                        - stringValue: "new_tag"
                        - stringValue: "another_tag"
                        name: array
                    name: array_concat
          name: select
  - description: testArrayConcatMultiple
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: title
              - Constant: "Dune"
      - Select:
        - AliasedExpr:
            - Expr.array_concat:
                - Field: tags
                - Constant: ["sci-fi"]
                - Constant: ["classic", "epic"]
            - "concatenatedTags"
    assert_results:
      - concatenatedTags:
        - politics
        - desert
        - ecology
        - sci-fi
        - classic
        - epic
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: "Dune"
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                concatenatedTags:
                  functionValue:
                    args:
                    - fieldReferenceValue: tags
                    - functionValue:
                        args:
                        - stringValue: "sci-fi"
                        name: array
                    - functionValue:
                        args:
                        - stringValue: "classic"
                        - stringValue: "epic"
                        name: array
                    name: array_concat
          name: select
  - description: testArrayContainsAnyWithField
    pipeline:
      - Collection: books
      - AddFields:
        - AliasedExpr:
            - Expr.array_concat:
                - Field: tags
                - Array: ["Dystopian"]
            - "new_tags"
      - Where:
          - Expr.array_contains_any:
            - Field: new_tags
            - - Constant: non_existent_tag
              - Field: genre
      - Select:
        - title
        - genre
      - Sort:
        - Ordering:
          - Field: title
          - ASCENDING
    assert_results:
      - title: "1984"
        genre: "Dystopian"
      - title: "The Handmaid's Tale"
        genre: "Dystopian"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                new_tags:
                  functionValue:
                    args:
                    - fieldReferenceValue: tags
                    - functionValue:
                        args:
                        - stringValue: "Dystopian"
                        name: array
                    name: array_concat
          name: add_fields
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: new_tags
              - functionValue:
                  args:
                  - stringValue: "non_existent_tag"
                  - fieldReferenceValue: genre
                  name: array
              name: array_contains_any
          name: where
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
                genre:
                  fieldReferenceValue: genre
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testArrayConcatLiterals
    pipeline:
      - Collection: books
      - Limit: 1
      - Select:
        - AliasedExpr:
            - Expr.array_concat:
                - Array: [1, 2, 3]
                - Array: [4, 5]
            - "concatenated"
    assert_results:
      - concatenated: [1, 2, 3, 4, 5]
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - integerValue: '1'
          name: limit
        - args:
          - mapValue:
              fields:
                concatenated:
                  functionValue:
                    args:
                    - functionValue:
                        args:
                        - integerValue: '1'
                        - integerValue: '2'
                        - integerValue: '3'
                        name: array
                    - functionValue:
                        args:
                        - integerValue: '4'
                        - integerValue: '5'
                        name: array
                    name: array_concat
          name: select
