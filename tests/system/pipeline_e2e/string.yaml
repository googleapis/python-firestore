tests:
  - description: testStringConcat
    pipeline:
      - Collection: books
      - Sort:
          - Ordering:
            - Field: author
            - ASCENDING
      - Select:
          - AliasedExpr:
              - Expr.string_concat:
                  - Field: author
                  - Constant: " - "
                  - Field: title
              - "bookInfo"
      - Limit: 1
    assert_results:
      - bookInfo: Douglas Adams - The Hitchhiker's Guide to the Galaxy
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: author
          name: sort
        - args:
          - mapValue:
              fields:
                bookInfo:
                  functionValue:
                    args:
                    - fieldReferenceValue: author
                    - stringValue: ' - '
                    - fieldReferenceValue: title
                    name: string_concat
          name: select
        - args:
          - integerValue: '1'
          name: limit
  - description: testStartsWith
    pipeline:
      - Collection: books
      - Where:
          - Expr.starts_with:
              - Field: title
              - Constant: The
      - Select:
        - title
      - Sort:
        - Ordering:
            - Field: title
            - ASCENDING
    assert_results:
      - title: The Great Gatsby
      - title: The Handmaid's Tale
      - title: The Hitchhiker's Guide to the Galaxy
      - title: The Lord of the Rings
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: The
              name: starts_with
          name: where
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testEndsWith
    pipeline:
      - Collection: books
      - Where:
          - Expr.ends_with:
              - Field: title
              - Constant: y
      - Select:
        - title
      - Sort:
        - Ordering:
          - Field: title
          - DESCENDING
    assert_results:
      - title: The Hitchhiker's Guide to the Galaxy
      - title: The Great Gatsby
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: y
              name: ends_with
          name: where
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
          name: select
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: descending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: testConcat
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: title
              - Constant: "The Hitchhiker's Guide to the Galaxy"
      - Select:
        - AliasedExpr:
            - Expr.concat:
                - Field: author
                - Constant: ": "
                - Field: title
            - "author_title"
        - AliasedExpr:
            - Expr.concat:
                - Field: tags
                - - Constant: "new_tag"
            - "concatenatedTags"
    assert_results:
      - author_title: "Douglas Adams: The Hitchhiker's Guide to the Galaxy"
        concatenatedTags:
          - comedy
          - space
          - adventure
          - new_tag
  - description: testLength
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: title
              - Constant: "The Hitchhiker's Guide to the Galaxy"
      - Select:
        - AliasedExpr:
            - Expr.length:
                - Field: title
            - "titleLength"
        - AliasedExpr:
            - Expr.length:
                - Field: tags
            - "tagsLength"
        - AliasedExpr:
            - Expr.length:
                - Field: awards
            - "awardsLength"
    assert_results:
      - titleLength: 36
        tagsLength: 3
        awardsLength: 2
  - description: testCharLength
    pipeline:
      - Collection: books
      - Select:
        - AliasedExpr:
            - Expr.char_length:
                - Field: title
            - "titleLength"
        - title
      - Where:
          - Expr.greater_than:
              - Field: titleLength
              - Constant: 20
      - Sort:
          - Ordering:
            - Field: title
            - ASCENDING
    assert_results:
      - titleLength: 29
        title: One Hundred Years of Solitude
      - titleLength: 36
        title: The Hitchhiker's Guide to the Galaxy
      - titleLength: 21
        title: The Lord of the Rings
      - titleLength: 21
        title: To Kill a Mockingbird
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - mapValue:
              fields:
                title:
                  fieldReferenceValue: title
                titleLength:
                  functionValue:
                    args:
                    - fieldReferenceValue: title
                    name: char_length
          name: select
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: titleLength
              - integerValue: '20'
              name: greater_than
          name: where
        - args:
          - mapValue:
              fields:
                direction:
                  stringValue: ascending
                expression:
                  fieldReferenceValue: title
          name: sort
  - description: CharLength
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: "Douglas Adams"
      - Select:
        - AliasedExpr:
            - Expr.char_length:
                - Field: title
            - "title_length"
    assert_results:
      - title_length: 36
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: Douglas Adams
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                title_length:
                  functionValue:
                    args:
                    - fieldReferenceValue: title
                    name: char_length
          name: select
  - description: ByteLength
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: Douglas Adams
      - Select:
        - AliasedExpr:
            - Expr.byte_length:
                - Expr.string_concat:
                  - Field: title
                  - Constant: _银河系漫游指南
            - "title_byte_length"
    assert_results:
      - title_byte_length: 58
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: Douglas Adams
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                title_byte_length:
                  functionValue:
                    args:
                    - functionValue:
                        args:
                        - fieldReferenceValue: title
                        - stringValue: "_\u94F6\u6CB3\u7CFB\u6F2B\u6E38\u6307\u5357"
                        name: string_concat
                    name: byte_length
          name: select
  - description: testLike
    pipeline:
      - Collection: books
      - Where:
          - Expr.like:
              - Field: title
              - Constant: "%Guide%"
      - Select:
        - title
    assert_results:
      - title: The Hitchhiker's Guide to the Galaxy
  - description: testRegexContains
    # Find titles that contain either "the" or "of" (case-insensitive)
    pipeline:
      - Collection: books
      - Where:
          - Expr.regex_contains:
              - Field: title
              - Constant: "(?i)(the|of)"
    assert_count: 5
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: "(?i)(the|of)"
              name: regex_contains
          name: where
  - description: testRegexMatches
    # Find titles that contain either "the" or "of" (case-insensitive)
    pipeline:
      - Collection: books
      - Where:
          - Expr.regex_match:
              - Field: title
              - Constant: ".*(?i)(the|of).*"
    assert_count: 5
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: title
              - stringValue: ".*(?i)(the|of).*"
              name: regex_match
          name: where
  - description: testStringContains
    pipeline:
      - Collection: books
      - Where:
          - Expr.string_contains:
              - Field: title
              - Constant: "Hitchhiker's"
      - Select:
        - title
    assert_results:
      - title: "The Hitchhiker's Guide to the Galaxy"
  - description: ToLower
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: "Douglas Adams"
      - Select:
        - AliasedExpr:
            - Expr.to_lower:
                - Field: title
            - "lower_title"
    assert_results:
      - lower_title: "the hitchhiker's guide to the galaxy"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: Douglas Adams
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                lower_title:
                  functionValue:
                    args:
                    - fieldReferenceValue: title
                    name: to_lower
          name: select
  - description: ToUpper
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: "Douglas Adams"
      - Select:
        - AliasedExpr:
            - Expr.to_upper:
                - Field: title
            - "upper_title"
    assert_results:
      - upper_title: "THE HITCHHIKER'S GUIDE TO THE GALAXY"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: Douglas Adams
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                upper_title:
                  functionValue:
                    args:
                    - fieldReferenceValue: title
                    name: to_upper
          name: select
  - description: Trim
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: "Douglas Adams"
      - Select:
        - AliasedExpr:
            - Expr.trim:
                - Expr.string_concat:
                  - Constant: "  "
                  - Field: title
                  - Constant: "  "
            - "trimmed_title"
    assert_results:
      - trimmed_title: "The Hitchhiker's Guide to the Galaxy"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: Douglas Adams
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                trimmed_title:
                  functionValue:
                    args:
                    - functionValue:
                        args:
                        - stringValue: "  "
                        - fieldReferenceValue: title
                        - stringValue: "  "
                        name: string_concat
                    name: trim
          name: select
  - description: StringReverse
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: "Jane Austen"
      - Select:
        - AliasedExpr:
            - Expr.string_reverse:
                - Field: title
            - "reversed_title"
    assert_results:
      - reversed_title: "ecidujerP dna edirP"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: "Jane Austen"
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                reversed_title:
                  functionValue:
                    args:
                    - fieldReferenceValue: title
                    name: string_reverse
          name: select
  - description: Substring
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: "Douglas Adams"
      - Select:
        - AliasedExpr:
            - Expr.substring:
                - Field: title
                - Constant: 4
                - Constant: 11
            - "substring_title"
    assert_results:
      - substring_title: "Hitchhiker'"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: "Douglas Adams"
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                substring_title:
                  functionValue:
                    args:
                    - fieldReferenceValue: title
                    - integerValue: '4'
                    - integerValue: '11'
                    name: substring
          name: select
  - description: Substring without length
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: "Fyodor Dostoevsky"
      - Select:
        - AliasedExpr:
            - Expr.substring:
                - Field: title
                - Constant: 10
            - "substring_title"
    assert_results:
      - substring_title: "Punishment"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: "Fyodor Dostoevsky"
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                substring_title:
                  functionValue:
                    args:
                    - fieldReferenceValue: title
                    - integerValue: '10'
                    name: substring
          name: select
  - description: Join
    pipeline:
      - Collection: books
      - Where:
          - Expr.equal:
              - Field: author
              - Constant: "Douglas Adams"
      - Select:
        - AliasedExpr:
            - Expr.join:
                - Field: tags
                - Constant: ", "
            - "joined_tags"
    assert_results:
      - joined_tags: "comedy, space, adventure"
    assert_proto:
      pipeline:
        stages:
        - args:
          - referenceValue: /books
          name: collection
        - args:
          - functionValue:
              args:
              - fieldReferenceValue: author
              - stringValue: "Douglas Adams"
              name: equal
          name: where
        - args:
          - mapValue:
              fields:
                joined_tags:
                  functionValue:
                    args:
                    - fieldReferenceValue: tags
                    - stringValue: ", "
                    name: join
          name: select
